openapi: 3.0.0
info:
  version: "1.0.0-oas3"
  title: OneOffice.API
  x-logo:
    url: 'http://localhost:31906/Static/Images/OneOffice.png'
  license:
    name: 'Ebix Australia Pty'
    url: 'https://www.ebix.com.au'
  contact:
    url: 'https://www.ebix.com.au/contact/contact-form'
  description: >-

    # Introduction

    OneOffice provides REST APIs to enable access to perform Life Policy
    Administration functions which includes but not limited to Create, Update
    and Retrieve Customers, Create and Maintain Policies, Manage Benefits,
    Retrieve Transactions & Diary Events, Handling Payments, Handling Periodic
    Debits and Claims Management.  


    The APIs are having a predictable resource URLs and APIs expect and produce
    JSON payloads to perform all these mentioned operations.  You can use your
    favorite HTTP/REST library for your programming language to use OneOffice
    APIs.


    # Authentication

    OneOffice APIs  offers following authentication mechanism 
      - **OAuth 2.0** - OneOffice APIs would follow the OAuth2.0 with the client credentials flow. A client_id and client_secret will be issued to the consumer of APIs in order to obtain access token. This token will then be included in request header as a bearer token for subsequest API requests. The generated tokens will have an expiry period (in minutes) after which a fresh token will be needed by caller of API.   


    # Getting Started

    Once a valid account is registered by OneOffice support staff the corresponding details will be shared to consumers. This will contain a client_id and client_secret to obtain an access toekn. Consumer application will have to access the **/Auth/Token**
    endpoint for posting the provided credentials. 

    After validating the accuracy of the provided client_id/client_secret, API will
    generate an access token (Bearer token) which will be passed in subsequent API's request headers.     

    Please refer to **/Auth/Token** request/response model examples for more
    details on how to obtain an access token. 

    ```Note
      OneOffice APIs use HTTPS protocol to secure the communication between client and API services.
    ```
security:
  - OAuth2: []
paths:
  /auth/token:
    post:
      tags:
        - Authenticate
      summary: To obtain an Authentication Token
      security: []
      description: >
        The endpoint allows to generate an authentication token for the given
        user credentials. Generated token will then be used to be passed as a
        bearer token in the subsequent API requests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTokenModel'
              examples:
                success:
                  value:
                    data:
                      access_token: 'GHKJOWERXXG=09923348[234SW{[...'
                      token_type: 'bearer'
                      expires_in: 14399
                    metadata:
                      status: Success
                      errors: []
        '400':
           $ref: '#/components/responses/400BadRequest'
        '401':
           $ref: '#/components/responses/401NotAuthorized'   
        '500':
           $ref: '#/components/responses/500InternalError'    
           
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthenticationModel'
        description: >-
          The request payload will be provided in this  object which contains
          user name, password and domain information.
        required: true
        
  /quote/calculation:
    post:
      tags:
        - PricingCalculation
      summary: To Generate a Pricing Quote
      description: >
        This API is used to provide insurance quotes. It accepts a body object
        which includes an array of lives insured and their associated benefits
        as input. The response of this API yields a similar array that includes
        the associated costs (premium for each available payment frequency as
        well as stamp duty) against each life & benefit.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateResponseModel'
              examples:
                success example:
                  value:
                    data:
                      - identitySequence: 1
                        benefitSequence: 1
                        calculationResults:
                          - frequencyType: Weekly
                            premium: 240
                            stampduty: 0
                            policyFee: 0
                            totalPremium: 240
                          - frequencyType: Quarterly
                            premium: 65
                            stampduty: 0
                            policyFee: 0
                            totalPremium: 65
                          - frequencyType: Monthly
                            premium: 21.65
                            stampduty: 0
                            policyFee: 0
                            totalPremium: 21.65
                    metadata:
                      status: Success
                      errors: []
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseModel'
              examples:
                Example 1:
                  value:
                    data: {}
                    metadata:
                      status: Failure
                      errors:
                        - code: '400'
                          description: Product Code not found
        '400':
           $ref: '#/components/responses/400BadRequest'
        '401':
           $ref: '#/components/responses/401NotAuthorized'   
        '500':
           $ref: '#/components/responses/500InternalError'      

      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/QuoteRequestModel'
            examples:
              Example 1:
                value:
                - applicationDate: '2019-06-02T23:07:43.407Z'
                  productCode: CKF
                  applicationSource: ''
                  registerStateCode: NSW
                  identity:
                    - dateOfBirth: '1989-10-10'
                      genderCode: M
                      identitySequence: 1
                      smokerStatusCode: L
                      benefit:
                        - benefitCode: TR1
                          benefitSequence: 1
                          insuranceAmount: 50000
                          loadDuration: 0
                          medicalAssessLoading: 0
                          medicalPerMilleLoading: 0
                          occupationalAssessLoading: 0
                          occupationalPerMilleLoading: 0
                          premiumTypeCode: S
                          recreationalAssessLoading: 0
                          recreationalPerMilleLoading: 0
               
              Example 3:
                value:
                - applicationDate: '2019-05-06T23:07:43.407Z'
                  productCode: TDX
                  applicationSource: ''
                  registerStateCode: NSW
                  identity:
                    - dateOfBirth: '1989-10-10'
                      genderCode: M
                      identitySequence: 1
                      smokerStatusCode: S
                      benefit:
                        - benefitCode: DT1
                          benefitSequence: 1
                          insuranceAmount: 850450
                          loadDuration: 0
                          medicalAssessLoading: 0
                          medicalPerMilleLoading: 0
                          occupationalAssessLoading: 0
                          occupationalPerMilleLoading: 0
                          premiumTypeCode: S
                          recreationalAssessLoading: 0
                          recreationalPerMilleLoading: 0
                    - dateOfBirth: '1989-10-10'
                      genderCode: M
                      identitySequence: 2
                      smokerStatusCode: 'N'
                      benefit:
                        - benefitCode: DT1
                          benefitSequence: 1
                          insuranceAmount: 750000
                          loadDuration: 0
                          medicalAssessLoading: 0
                          medicalPerMilleLoading: 0
                          occupationalAssessLoading: 0
                          occupationalPerMilleLoading: 0
                          premiumTypeCode: S
                          recreationalAssessLoading: 0
                          recreationalPerMilleLoading: 0
                
        description: >-
          The request payload will be provided in this nested object containing
          the general quote information along with an arrary of lives insured.
          Each live will contains one or many benefits to get the policy pricing
          details.
        required: true
        
  /policies:
    post:
      tags:
        - Policy
      summary: To Create a Life Policy
      description: >
        The endpoint is used to create a life policy. It accepts a body object
        which includes policy general details, benefits and reference to one or
        more identities available in OneOffice . The response of this API is a
        unique Policy No. being generated.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponseModel'
              examples:
                Example 1:
                  value:
                    data:
                      policyNumber: TDX10000159
                      identity:
                      - identityId: 2231
                        identityReference: NH-11231
                        identityAltReference: SF-01290
                    metadata:
                      status: Success
                      errors: null
                
                Example 2:
                  value:
                    data:
                      policyNumber: IA110000159
                      identity:
                      - identityId: 4411
                        identityReference: NH-11231
                        identityAltReference: SF-01290
                      - identityId: 2236
                        identityReference: NH-11233
                        identityAltReference: SF-01299  
                    metadata:
                      status: Success
                      errors:
        
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseModel'
              examples:
                Example 1:
                  value:
                    data: {}
                    metadata:
                      status: Failure
                      errors:
                        - code: 'P100'
                          description: IdentityId '2231' not found in OneOffice
        
        '400':
           $ref: '#/components/responses/400BadRequest'
        '401':
           $ref: '#/components/responses/401NotAuthorized'   
        '500':
           $ref: '#/components/responses/500InternalError'    
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRequestModel'
            examples:
              Example 1:
                value:
                  applicationDate: '2019-04-24T02:23:12.200Z'
                  applicationSource: ''
                  firstBillingDate: '2019-04-24'
                  isCPI: true
                  isSTP: true
                  productCode: TDX
                  premiumFrequencyCode: W
                  registerStateCode: NSW
                  userName: paulw
                  identity:
                    - identityType: Individual
                      identityReference: NH-11231
                      identityAltReference: SF-01290
                      dateOfBirth: '1980-06-17'
                      firstName: Johnny
                      genderCode: M
                      identitySequence: 1
                      lastName: Mihalis
                      occupationCode: OC006
                      smokerStatusCode: 'N'
                      titleCode: 2
                      contact:
                        homePhone: 024569817
                        mobilePhone: 049878123
                        email: jmihalis@yahoo.com
                        contactMethodCode: C
                        correspondenceMethodCode: E
                      residentialAddress:
                        streetAddress: 12A Homebush Bay Dr
                        suburb: Rhodes
                        postcode: 2111
                        stateCode: NSW
                        countryCode: AUS
                      relationship:
                        - relationshipCode: INSR
                          isFinancialDependent: false
                        - relationshipCode: CLNT
                          isFinancialDependent: false
                      benefit:
                        - benefitCode: DT1
                          benefitSequence: 1
                          insuranceAmount: 250000
                          loadDuration: 0
                          medicalAssessLoading: 0
                          medicalPerMilleLoading: 0
                          occupationalAssessLoading: 0
                          occupationalPerMilleLoading: 0
                          premiumTypeCode: S
                          premiumDialDownPercent: 0
                          recreationalAssessLoading: 0
                          recreationalPerMilleLoading: 0
                  account:
                    - paymentType: B
                      bankBSB: 623-560
                      accountName: Johnny Mihalis
                      accountNumber: 123456789
                  
              Example 2:
                value:
                  applicationDate: '2019-06-13T02:23:12.200Z'
                  applicationSource: ''
                  firstBillingDate: '2019-06-13'
                  isCPI: true
                  isSTP: true
                  productCode: CKF
                  premiumFrequencyCode: W
                  registerStateCode: NSW
                  userName: sarahp
                  identity:
                  - identityType: Individual
                    identityId: 2231
                    identityReference: null
                    identityAltReference: null
                    dateOfBirth: '1980-06-13'
                    firstName: Sara
                    genderCode: F
                    identitySequence: 1
                    lastName: Parker
                    occupationCode: OC006
                    smokerStatusCode: L
                    titleCode: 2
                    contact:
                      homePhone: 024569817
                      mobilePhone: 049878123
                      email: sparker@gmail.com
                      contactMethodCode: C
                      correspondenceMethodCode: E
                    residentialAddress:
                      streetAddress: 12A Homebush Bay Dr
                      suburb: Rhodes
                      postcode: 2111
                      stateCode: NSW
                      countryCode: AUS
                    relationship:
                    - relationshipCode: INSR
                      isFinancialDependent: false
                    - relationshipCode: CLNT
                      isFinancialDependent: false
                    benefit:
                    - benefitCode: TR1
                      benefitSequence: 1
                      benefitPeriodCode: null
                      insuranceAmount: 250000
                      loadDuration: 0
                      medicalAssessLoading: 0
                      medicalPerMilleLoading: 0
                      occupationalAssessLoading: 0
                      occupationalPerMilleLoading: 0
                      premiumTypeCode: L
                      premiumDialDownPercent: 0
                      recreationalAssessLoading: 0
                      recreationalPerMilleLoading: 0
                      waitingPeriodCode: null

                  - identityType: Individual
                    identityId: null
                    identityReference: NH-11232
                    identityAltReference: SF-01291
                    dateOfBirth: '1986-06-13'
                    firstName: Jessica
                    genderCode: F
                    identitySequence: 1
                    lastName: Mihalis
                    occupationCode: OC008
                    smokerStatusCode: N
                    titleCode: 1
                    contact:
                      homePhone: 024569817
                      mobilePhone: 049878124
                      email: jmihalis1@yahoo.com
                      contactMethodCode: C
                      correspondenceMethodCode: E
                    residentialAddress:
                      streetAddress: 12A Homebush Bay Dr
                      suburb: Rhodes
                      postcode: 2111
                      stateCode: NSW
                      countryCode: AUS
                    relationship:
                    - relationshipCode: FAMM
                      isFinancialDependent: false
                    
                  - identityType: Individual
                    identityId: null
                    identityReference: NH-11288
                    identityAltReference: SF-01299
                    dateOfBirth: '2000-06-13'
                    firstName: William
                    genderCode: M
                    identitySequence: 1
                    lastName: Mihalis
                    occupationCode: null
                    smokerStatusCode: N
                    titleCode: 2
                    contact:
                      homePhone: 024569817
                      mobilePhone: 049878128
                      email: wmihalis@yahoo.com
                      contactMethodCode: C
                      correspondenceMethodCode: E
                    residentialAddress:
                      streetAddress: 12A Homebush Bay Dr
                      suburb: Rhodes
                      postcode: 2111
                      stateCode: NSW
                      countryCode: AUS
                    relationship:
                    - relationshipCode: FAMM
                      isFinancialDependent: true
                    
                  - identityType: Individual
                    identityId: null
                    identityReference: NH-11277
                    identityAltReference: SF-01298
                    dateOfBirth: '2014-06-08'
                    firstName: Audrey
                    genderCode: F
                    identitySequence: 1
                    lastName: Mihalis
                    occupationCode: null
                    smokerStatusCode: N
                    titleCode: 1
                    contact:
                      homePhone: 024569817
                      mobilePhone: null
                      email: jmihalis@yahoo.com
                      contactMethodCode: C
                      correspondenceMethodCode: E
                    residentialAddress:
                      streetAddress: 12A Homebush Bay Dr
                      suburb: Rhodes
                      postcode: 2111
                      stateCode: NSW
                      countryCode: AUS
                    relationship:
                    - relationshipCode: FAMM
                      isFinancialDependent: true  
                  account:
                  - paymentType: B
                    bankBSB: 623-560
                    accountName: John Mihalis
                    accountNumber: 98808782378
                    cardType: null
                    cardName: null
                    cardNumber: null
                    expiryDate: null      

        description: >-
          The request payload will be provided in this object which contains
          policy information along with identities, relationships and benefits per life insured
        required: true
        
  /policies/{id}/summary:
    get:
      tags:
        - Policy
      summary: To Fetch Life Policy Summary
      description: >
        The endpoint is used to fetch a life policy summary information. It accepts PolicyNo as path parameter available in OneOffice. 
        The response is policy summary object being returned
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: >-
            OneOffice policy number to fetch the summary information 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicySummaryResponseModel'
              examples:
                Example 1:
                  value:
                    effectiveDate: '2019-07-02'
                    endDate: ''
                    isCPI: true
                    isPD: true
                    originalCreationDate: '2019-07-02'
                    originalIssueDate: '2019-07-02'
                    product:
                      code: TDX
                      description: Smart Term
                    premiumFrequency:
                      code: W
                      description: Weekly
                    premiumPauseStartDate: ''
                    premiumPauseEndDate: ''
                    registerState:
                      code: NSW
                      description: New South Wales
                    renewalDate: '2020-07-02'
                    status:
                      code: 1
                      description: In force
                    statusDate: '2019-07-02T07:27:25.004Z'
                    identity:
                      - identityType: Individual
                        identityId: 11234
                        identityReference: ''
                        dateOfBirth: '1985-07-02'
                        firstName: John
                        gender:
                          code: M
                          description: Male
                        lastName: Bolton
                        smokerStatus:
                          code: S
                          description: Smoker
                        title:
                          code: 1
                          description: Mr.
                        relationship:
                          - type:
                              code: INSR
                              description: Life Insured
                        benefit:
                          - type:
                              code: DT1
                              description: Death Benefit
                            effectiveDate: '2019-07-02'
                            endDate: '2019-07-02'
                            insuranceAmount: 50000
                            modalPremiumAmount: 8.50
                            paidToDate: '2019-07-03'
                            premiumType:
                              code: S
                              description: Stepped
                            status:
                              code: 1
                              description: In force
                            statusDate: '2019-07-02T07:27:25.004Z'
                    segment:
                      - segmentType:
                          code: MS01
                          description: Assetless Segment
                        segmentBalance: 0.50
                    
        
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseModel'
              examples:
                Example 1:
                  value:
                    data: {}
                    metadata:
                      status: Failure
                      errors:
                        - code: 'P100'
                          description: PolicyNo 'TDX01223455' not found in OneOffice
        
        '400':
           $ref: '#/components/responses/400BadRequest'
        '401':
           $ref: '#/components/responses/401NotAuthorized'   
        '500':
           $ref: '#/components/responses/500InternalError'    
           
  /policies/{id}/benefits:
    get:
      tags:
        - Policy
      summary: To Fetch Life Policy Benefits
      description: >
        The endpoint is used to fetch list of benefits against a policy number. It accepts PolicyNo as path parameter and an optional boolean parameter 'includeHistory' which implies whether the current benefits are needed or all benefit records (including history records) should be included in payload. Current benefits included all the current of future benefits having status of either Inforce or Proposal. The response is policy benefit object being returned
    
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: >-
            OneOffice policy number to fetch the summary information 
        - in: query
          name: includeHistory
          description: >-
            To specify whether historical benefit records are required to be included in payload. By default only 'Current' benefits are returned  
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyBenefitResponseModel'
              examples:
                Example 1:
                  value:
                  - identityId: 2231
                    identityReference: NH-11277
                    effectiveDate: '2019-01-01'
                    endDate: '2019-12-31'
                    benefitSequence: 1
                    campaign:
                      code: ''
                      description: ''
                    cancellationReason:
                      code: ''
                      description: ''
                    claimDate: ''
                    creationReason:
                      code: 1
                      description: New Business
                    expiryDate: '2019-12-31'
                    isClaimRequested: false
                    isCPI: true
                    isPremiumFreeze: false
                    isPremiumPaused: false
                    isPremiumWaived: true
                    originalCreationDate: '2018-01-01'
                    originalEndDate: '2018-12-31'
                    originalIssueDate: '2018-01-01'
                    originalStartDate: '2018-01-01'
                    paidUptoDate: '2019-06-30'
                    policyFeeStampDutyAmount: 0
                    premiumPauseExpiryDate: ''
                    premiumPauseStartDate: ''
                    processCreatedBy:
                      code: ''
                      description: ''
                    status:
                      code: 1
                      description: Inforce
                    statusDate: '2019-01-01'
                    registerState: NSW
                    discounts:
                      decreasingDiscountPercent: 0
                      expenseDiscountPercent: 0
                      negotiationPerMilleDiscountAmount: 0
                      noClaimDiscountPercent: 2
                      noClaimDiscountStartDate: '2019-01-01'
                      policyFeeNegotiationDiscountPercent: 0
                      riskDiscountPercent: 0
                    loadings:
                      medicalLoadingPercent: 5
                      medicalPerMilleLoadingAmount: 0
                      medicalPerMilleLoadingDuration: 5
                      occupationalLoadingPercent: 0
                      occupationalPerMilleLoadingAmount: 0
                      occupationalPerMilleLoadingDuration: 0
                      recreationalLoadingPercent: 0
                      recreationalPerMilleLoadingAmount: 0
                      recreationalPerMilleLoadingDuration: 0
                    premiumComponents:
                      annualPremiumAmount: 240
                      annualStampDutyAmount: 0
                      modalPremiumAmount: 20
                    ratingFactors:
                      benefitIndexation: ''
                      benefitPeriod:
                        code: ''
                        description: ''
                      dateOfBirth: '1983-07-29'
                      employmentStatus:
                        code: C
                        description: Employed under terms of contract
                      gender:
                        code: M
                        description: Male
                      occupation:
                        code: ''
                        description: ''
                      occupationCategory:
                        code: ''
                        description: ''
                      premiumType:
                        code: S
                        description: Stepped
                      seriesCode: ''
                      smoker:
                        code: N
                        description: Non Smoker
                      sumInsuredAmount: 250000
                      type:
                        code: DT1
                        description: Death Benefit
                      waitingPeriod:
                        code: ''
                        description: ''
                    reinsurance:
                      assessmentReferenceNo: ''
                      plan:
                        code: ''
                        description: ''
                      proportionPercentage: 0
                      retainedSumInsuredAmount: 0

        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseModel'
              examples:
                Example 1:
                  value:
                    data: {}
                    metadata:
                      status: Failure
                      errors:
                        - code: 'P100'
                          description: PolicyNo 'TDX01223455' not found in OneOffice
        
        '400':
           $ref: '#/components/responses/400BadRequest'
        '401':
           $ref: '#/components/responses/401NotAuthorized'   
        '500':
           $ref: '#/components/responses/500InternalError'             
           
  /policies/{id}/claims:
    get:
      tags:
        - Claim
      summary: To Fetch Policy Claims Summary
      description: >
        The endpoint is used to fetch list of claims against a policy number. It accepts PolicyNo as path parameter and returns a list of claims against that policy 
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: >-
            OneOffice policy number to fetch the claims information 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyClaimsResponseModel'
              examples:
                Example 1:
                  value:
                  - claimDate: '2019-01-01'
                    claimAmount: 50000.00
                    claimNo: 5521
                    identityId: 2231
                    incident: 
                      code: DTH
                      description: Death
                    paidAmount: 50000.00
                    status:
                      code: 0
                      description: Open
                  - claimDate: '2018-01-01'
                    claimAmount: 1250.00
                    claimNo: 1087
                    identityId: 2231
                    incident: 
                      code: TPD
                      description: Permanent Disability
                    paidAmount: 1250.00
                    status:
                      code: 7
                      description: Closed
                      
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseModel'
              examples:
                Example 1:
                  value:
                    data: {}
                    metadata:
                      status: Failure
                      errors:
                        - code: 'P100'
                          description: PolicyNo 'TDX01223455' not found in OneOffice
        
        '400':
           $ref: '#/components/responses/400BadRequest'
        '401':
           $ref: '#/components/responses/401NotAuthorized'   
        '500':
           $ref: '#/components/responses/500InternalError'                      
           
  /policies/payments:
    post:
      tags:
        - Payment
      summary: To Initiate a Payment Request
      description: >
        This endpoint is used to initialize a payment requrest against a policy available in OneOffice. System will firstly verifiy the policy number and status before processing this request. Policies with 'Enforce' and 'Pending-Lapsed' status will accept these adhoc payments. Upon successful validation, system will add balance amount in policy segment balance and will execute charges function to generate insurance transactions. This would yeild an updated paid to date along with a revised next debit date (if applicable).        
        API accepts a body object which includes policy number, paid amount and a preferred charges run date. 
        
        The response of this API is segment balance and next debit date
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponseModel'
              examples:
                Example 1:
                  value:
                    data:
                      policyNumber: TDX10000159
                      balanceBefore: 3.00
                      balanceAfter: 1.50
                      paidToDateBefore: '2019-06-30'
                      paidToDateAfter: '2019-07-31'
                      nextDebitDate: '2019-08-31'
                    metadata:
                      status: Success
                      errors:  
                Example 2:
                  value:
                    data:
                      policyNumber: IA110000160
                      balanceBefore: 0.00
                      balanceAfter: 15.00
                      paidToDateBefore: '2019-04-30'
                      paidToDateAfter: '2019-05-31'
                      nextDebitDate: '2019-06-31'
                    metadata:
                      status: Success
                      errors:
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseModel'
              examples:
                Example 1:
                  value:
                    data: {}
                    metadata:
                      status: Failure
                      errors:
                        - code: 'P200'
                          description: Policy number 'TDX10000122' is not having a valid status to accept payments
                Example 2:
                  value:
                    data: {}
                    metadata:
                      status: Failure
                      errors:
                        - code: 'P201'
                          description: Policy number 'TDX10000122' is not found in OneOffice          

        '400':
           $ref: '#/components/responses/400BadRequest'
        '401':
           $ref: '#/components/responses/401NotAuthorized'   
        '500':
           $ref: '#/components/responses/500InternalError'     
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequestModel'
            examples:
              Example 1:
                value:
                  policyNumber: TDX10000159
                  paidAmount: 13.50
                  chargesRunToDate: '2019-08-31'  
              Example 2:
                value:
                  policyNumber: IA110000160
                  paidAmount: 15.00
                  chargesRunToDate: '2019-08-31'  
        description: >-
          The request payload will be provided in this object which contains policy number and amount to be paid 
        required: true
           
  /policies/{id}/payments/history:
    get:
      tags:
        - Payment
      summary: To get a list of Payment history
      description: >- 
        This endpoint lists all the incoming/out going payments associated with the policy. System will firstly verifiy the policy number before processing this request. Upon successful validation, system will list historical payments data. API accepts PolicyNo in path parameter
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: >-
            OneOffice policy number to fetch the history payment information  
        - in: query
          name: paymentType
          description: >-
            To specify the payment types to be retrieved. This will result in all payment types, if unspecified 
          schema:
            enum:
              - Debit
              - Credit
        - in: query
          name: effectiveFrom
          description: >-
            To return the payment history from a specific date till the current date. System will try to return all payment records if effectiveFrom is unspecified 
          schema:
            type: string
            format: date

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentHistoryResponseModel'
              examples:
                Example 1:
                  value:
                    data:
                      - accountFrom:
                          paymentType: B
                          bankBSB: 032-001
                          accountName: Gerry Thompson
                          accountNumber: 1234567
                          cardType: ''
                          cardName: ''
                          cardNumber: ''
                          expiryDate: ''
                        accountTo:
                          paymentType: B
                          bankBSB: 045-007
                          accountName: Star Insurers
                          accountNumber: 9876542
                          cardType: ''
                          cardName: ''
                          cardNumber: ''
                          expiryDate: ''
                        claimNo: 0
                        deductionDate: '2018-07-08'
                        effectiveDate: '2018-07-08'
                        paymentAmount: 25.00
                        paymentType:
                          code: 13
                          description: Debit Customer
                        referenceNo: 1778
                        reversalDate: ''
                        source:
                          code: 50
                          description: Policy
                        status:
                          code: A
                          description: Authorized
                        statusDate: '2018-07-07' 
                    metadata:
                      status: Success
                      errors:  
                Example 2:
                  value:
                    data:
                      data:
                      - accountFrom:
                          paymentType: B
                          bankBSB: 045-007
                          accountName: Star Insurers
                          accountNumber: 9876542
                          cardType: ''
                          cardName: ''
                          cardNumber: ''
                          expiryDate: ''
                        accountTo:
                          paymentType: B
                          bankBSB: 032-001
                          accountName: Gerry Thompson
                          accountNumber: 1234567
                          cardType: ''
                          cardName: ''
                          cardNumber: ''
                          expiryDate: ''
                        claimNo: 16675
                        deductionDate: '2018-07-08'
                        effectiveDate: '2018-07-08'
                        paymentAmount: 14000.00
                        paymentType:
                          code: 50
                          description: Credit Customer
                        referenceNo: 8796
                        reversalDate: ''
                        source:
                          code: 40
                          description: Claim Payment
                        status:
                          code: A
                          description: Authorized
                        statusDate: '2018-07-07' 
                    metadata:
                      status: Success
                      errors:
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseModel'
              examples:
                Example 1:
                  value:
                    data: {}
                    metadata:
                      status: Failure
                      errors:
                        - code: 'P201'
                          description: Policy number 'TDX10000122' is not found in OneOffice          

        '400':
           $ref: '#/components/responses/400BadRequest'
        '401':
           $ref: '#/components/responses/401NotAuthorized'   
        '500':
           $ref: '#/components/responses/500InternalError'              
           
  /identities:
    put:
      tags:
        - Identity
      summary: To update an existing Identity 
      description: >
        This endpoint is used to update an existing identity in OneOffice. System will firstly verifiy the OneOffice generated IdentityId. An exception will be thrown if provided identityId is not found in OneOffice. The response of this API is a success/failure message with appropriate error code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseModel'
              examples:
                Example 1:
                  value:
                    data:
                    metadata:
                      status: Success
                      errors:  
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseModel'
              examples:
                Example 1:
                  value:
                    data: {}
                    metadata:
                      status: Failure
                      errors:
                        - code: 'P500'
                          description: Identity Id '2230' is not found in OneOffice
 
        '400':
           $ref: '#/components/responses/400BadRequest'
        '401':
           $ref: '#/components/responses/401NotAuthorized'   
        '500':
           $ref: '#/components/responses/500InternalError'     
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityModel'
            examples:
              Example 1:
                value:
                  identityType: Individual
                  identityId: 2230
                  identityReference: NH-11231
                  identityAltReference: SF-01290
                  dateOfBirth: '1980-06-17'
                  firstName: Johnny
                  genderCode: M
                  identitySequence: 1
                  lastName: Mihalis
                  occupationCode: OC006
                  smokerStatusCode: 'N'
                  titleCode: 2
                  contact:
                    homePhone: 024569817
                    mobilePhone: 049878123
                    email: jmihalis@yahoo.com
                    contactMethodCode: C
                    correspondenceMethodCode: E
                  residentialAddress:
                    streetAddress: 12A Homebush Bay Dr
                    suburb: Rhodes
                    postcode: 2111
                    stateCode: NSW
                    countryCode: AUS
              Example 2:
                value:
                  identityType: Individual
                  identityId: 2231
                  identityReference: null
                  identityAltReference: null
                  dateOfBirth: '1980-06-13'
                  firstName: Sara
                  genderCode: F
                  identitySequence: 1
                  lastName: Parker
                  occupationCode: OC006
                  smokerStatusCode: L
                  titleCode: 2
                  contact:
                    homePhone: 024569817
                    mobilePhone: 049878123
                    email: sparker@gmail.com
                    contactMethodCode: C
                    correspondenceMethodCode: E
                  residentialAddress:
                    streetAddress: 12A Homebush Bay Dr
                    suburb: Rhodes
                    postcode: 2111
                    stateCode: NSW
                    countryCode: AUS
              Example 3:
                value:
                  identityType: Individual
                  identityId: 2235
                  identityReference: NH-11232
                  identityAltReference: SF-01291
                  dateOfBirth: '1986-06-13'
                  firstName: Jessica
                  genderCode: F
                  identitySequence: 1
                  lastName: Mihalis
                  occupationCode: OC008
                  smokerStatusCode: N
                  titleCode: 1
                  contact:
                    homePhone: 024569817
                    mobilePhone: 049878124
                    email: jmihalis1@yahoo.com
                    contactMethodCode: C
                    correspondenceMethodCode: E
                  residentialAddress:
                    streetAddress: 12A Homebush Bay Dr
                    suburb: Rhodes
                    postcode: 2111
                    stateCode: NSW
                    countryCode: AUS
        description: >-
          The request payload will be provided in this object which contains policy number and amount to be paid 
        required: true
        
servers:
  - url: 'https://virtserver.swaggerhub.com/tahirshahzad/OneOfficeAPIs/1.0.0'
  
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: This API uses OAuth2 with the client credentials grant flow. [More info](https://api.example.com/docs/auth)
      flows: 
        clientCredentials: 
          tokenUrl: /Auth/Token
          scopes: 
            read: Grants read access
            write: Grants write access
  schemas:
    QuoteRequestModel:
      type: object
      required:
        - applicationDate
        - productCode
        - identity
      properties:
        applicationDate:
          description: This describes the effective date for calculating a pricing quote
          format: date-time
          type: string
        productCode:
          description: To specify a product code for pricing calculation
          type: string
        applicationSource:
          description: >-
            This identifies the application origination source to pick the appropriate rates for white branding
          type: string
        registerStateCode:
          type: string
          description: >-
            State Code for the purpose of stamp duty calculation. This defaults to 'NSW' in
            case not supplied
        identity:
          type: array
          description: >-
            This specifies an array of life entities along with benefit list for
            pricing calculation
          items:
            allOf:
              - $ref: '#/components/schemas/IdentityBasicModel'
              - $ref: '#/components/schemas/BenefitsModel'  
    
    PolicyRequestModel:
      type: object
      required:
        - applicationDate
        - isCPI
        - productCode
        - premiumFrequencyCode
        - identity
      properties:
        applicationDate:
          description: >-
            This describes the effective date for creating a policy
          format: date-time
          type: string
        applicationSource:
          description: >-
            This identifies the application origination source to pick the appropriate rates for white branding 
          type: string
        firstBillingDate:
          description: >-
            This specifies the nominated first billing date for the premium payments of life policy
          type: string
          format: date
        isCPI:
          type: boolean
          description: >-
            This is a boolean flag to depict the consumer price index
        isSTP:
          type: boolean
          description: >-
            This flag identifies whether straight through processing is required. 'Yes', would result in the policy being created and issued whereas 'No' would result the policy to be created in Proposal state
        productCode:
          description: >-
            To specify a product code for pricing calculation
          type: string
        premiumFrequencyCode:
          type: string
          description: >-
            This represents the premium frequency for premium payments. As each
            product can have different frequencies configured, consumer must
            pass on the correct frequency code * W - Weekly * F - Fortnightly *
            4 - FourWeekly * M - Monthly * Q - Quarterly * H - HalfYearly * Y -
            Yearly
          enum:
            - W
            - F
            - 4
            - M
            - Q
            - H
            - Y
        registerStateCode:
          type: string
          description: >-
            Register state code for stamp duty calculations with in policy to be issued. This defaults to 'NSW' in
            case not supplied
        userName:
          description: >-
            Name of the user who creates the policy
          type: string
        identity:
          type: array
          description: >-
            This specifies an array of life entities along with policy relationships and benefit list for
            premium calculation
          items:
            allOf:
              - $ref: '#/components/schemas/IdentityModel'
              - $ref: '#/components/schemas/RelationshipsModel'
              - $ref: '#/components/schemas/BenefitsModel' 
        account:
          type: array
          description: >-
            One or more periodic debit accounts to fund the policy premiums
          items:
            $ref: '#/components/schemas/AccountModel'
            
    CodeDescriptionModel:
      type: object
      properties:
        code:
          description: >-
            This describes the code field 
          type: string
        description:
          type: string
          description: >-
            This describes the description field    
            
    PolicySummaryResponseModel:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PolicySummaryModel'  
        metadata:
          $ref: '#/components/schemas/GenericErrorModel'  
          
    
    PolicyClaimsResponseModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ClaimSelectBasicModel'   
        metadata:
          $ref: '#/components/schemas/GenericErrorModel'        
    
    
    PolicyBenefitResponseModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BenefitSelectModel'   
        metadata:
          $ref: '#/components/schemas/GenericErrorModel'        
    
    PolicySummaryModel:
      type: object
      properties:
        effectiveDate:
          description: >-
            This describes the effective date of the policy
          format: date
          type: string
        endDate:
          description: >-
            This describes the end date of the policy
          format: date
          type: string
        isCPI:
          type: boolean
          description: >-
            This is a boolean flag to depict whether CPI is opted in or not  
        isPD:
          type: boolean
          description: >-
            This is a boolean flag to depict whether periodic debit is available or not  
        originalCreationDate:
          description: >-
            This describes the original creation date of the policy
          format: date
          type: string
        originalIssueDate:
          description: >-
            This describes the original issue date of the policy which can be different than original creation date
          format: date
          type: string  
        product:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This reflects the product associated with the policy 
        premiumFrequency:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This represents the selected premium payment frequency against a policy 
        premiumPauseStartDate:
          description: >-
            This describes the date at which premium is being paused against the policy
          format: date
          type: string
        premiumPauseEndDate:
          description: >-
            This describes the date when premium pause is ending against the policy
          format: date
          type: string  
        registerState:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This represents the selected state for stamp duty calculation 
        renewalDate:
          format: date
          type: string  
          description: >-
            This represents the date at which policy is being renewed     
        status:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This represents the current status of the policy 
        statusDate:
          format: date-time
          type: string  
          description: >-
            This represents the date at which policy status is changed     
        identity:
          type: array
          description: >-
            This specifies an array of life entities along with policy relationships and benefit list
          items:
            $ref: '#/components/schemas/IdentitySelectModel'
        segment:
          type: array
          description: >-
            One or more periodic debit accounts to fund the policy premiums
          items:
            $ref: '#/components/schemas/SegmentModel'        
          
    RelationshipsModel:
      type: object
      properties:
        relationship:
          type: array
          description: >-
            This represents list of relationship codes specified in a policy
          items:
            $ref: '#/components/schemas/RelationshipModel'  
    
    RelationshipModel:
      type: object
      properties:
        relationshipCode:
          type: string
          description: >-
            This represents the identity's relationship in a policy. e.g. * INSR - Life Insured * BENE - Beneficiary * CLNT - Policy Client. 
            Complete list of relationship codes can be obtained from ReferenceData API
        isFinancialDependent:
          type: boolean
          description: >-
            Flag to identify whether the current identity is financially dependent on the Insurance owner    
    
    IdentityBasicModel:
      type: object
      properties:
        dateOfBirth:
          format: date
          type: string
          description: >-
            Mandatory for Life Insured Identity (relationshipCode = INSR). Date of birth associated with the identity
        genderCode:
          type: string
          description: >-
            Mandatory for Life Insured Identity (relationshipCode = INSR). Gender code of corresponding identity
          enum:
            - M
            - F
        identitySequence:
          format: int32
          type: integer
          description: >-
            This depicts the life's unique sequence number being passed by the
            caller for request/response correlation. This can be ommitted in
            case of a single life
        occupationCode:
          type: string
          description: >-
            This expects the occupation code of the life entity being supplied
        occupationCategoryCode:
          type: string
          description: >-
            This expects the occupation category code against provided
            occupation for life entity
        smokerStatusCode:
          type: string
          description: >-
            This depicts the smoker status of the provided life entity. This is
            an enum which represents following values * L - Never Smoked * N -
            Non Smoker * S - Smoker
          enum:
            - L
            - 'N'
            - S
    
    IdentityModel:
      allOf:
        - $ref: '#/components/schemas/IdentityBasicModel'
        - type: object
          properties:
            identityType:
              type: string
              description: >-
                Identity type to detrmine whether the identity is of individual or corporate
              enum:
                - Individual
                - Corporate
              default: Individual
            identityId:
              type: integer
              format: int32
              description: >-
                Unique identity Id generated by OneOffice. If this field is provided, the API will not create a new identity but links the policy with the existing identity (if found). An exception will be thrown if provided identity is not found in OneOffice. identityId will have a high precedence over  identityReference/identityAltReference and if all are provided, only identityId will be used 
            identityReference:
              type: string
              description: >-
                External identity reference generated by consumer's system. If this field is provided, system will firstly search the identity in OneOffice having this reference number. Life policy will be linked with the identity if found, otherwise a new identity will be created based on the supplied payload
            identityAltReference:
              type: string
              description: >-
                External identity unique reference generated by consumer's CRM system. This reference key will just be stored in the Oneoffice identity. There will be no searching to identify an existing identity in OneOffice based on this field
            firstName:
              type: string
              description: >-
                Mandatory field for creating an identity in OneOffice. First name of individual identity record
            height:
              format: double
              type: number
              description: >-
                This represents height of the life entity in centimeters. Its required for Income Protection benefit types
            initials:
              type: string
              description: >-
                Initials of individual identity record 
            lastName:
              type: string
              description: >-
                Mandatory field for creating an identity in OneOffice. Last name of individual identity record    
            tfn:
              type: string
              description: >-
                Tax File Number of the identity record being referred
            titleCode:
              type: string
              description: >-
                Mandatory field for creating an identity in OneOffice. Title Code of life entity being provided. Valid title codes can be obtained from ReferenceData API
            weight:
              format: double
              type: number
              description: >-
                This represents weight of the life entity in kilograms. Its required for Income Protection benefit types
            contact:
              $ref: '#/components/schemas/ContactModel'
            residentialAddress:
              $ref: '#/components/schemas/AddressModel'
            postalAddress:
              $ref: '#/components/schemas/AddressModel'
           
    IdentitySelectModel:
      type: object
      properties:
        identityType:
          type: string
          description: >-
            Type to detrmine whether the identity is of individual or corporate
          enum:
            - Individual
            - Corporate
          default: Individual
        identityId:
          type: integer
          format: int32
          description: >-
            Unique identity Id available in OneOffice
        identityReference:
          type: string
          description: >-
            External identity reference provided by consumer's system
        dateOfBirth:
          format: date
          type: string
          description: >-
            Mandatory for Life Insured Identity (relationshipCode = INSR). Date of birth associated with the identity
        firstName:
          type: string
          description: >-
            Mandatory field for creating an identity in OneOffice. First name of individual identity record
        gender:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This represents the gender detail of the corresponding identity
        lastName:
          type: string
          description: >-
            Mandatory field for creating an identity in OneOffice. Last name of individual identity record    
        smokerStatus:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
             This depicts the smoker status of the associated life entity.
        title:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This represents the title of the corresponding identity
        relationship1:
          allOf:        
            - $ref: '#/components/schemas/RelationshipsModel'
          description: >-
            This represents list of relationship codes specified in a policy
        relationship:
          type: array
          description: >-
            This represents list of relationship codes specified in a policy
          items:
            allOf:
              - $ref: '#/components/schemas/CodeDescriptionModel'
            description: >-
              This represents the identity's relationship in a policy. e.g. * INSR - Life Insured * BENE - Beneficiary * CLNT - Policy Client
        benefit:
          type: array
          description: >-
            Mandatory for Life Insured Identity (relationshipCode = INSR). It provides the list of benefits against a life entity to get the
            pricing calculation. 
          items:
            $ref: '#/components/schemas/BenefitSelectBasicModel'        
    
    BenefitsModel:
      type: object
      properties:
        benefit:
          type: array
          description: >-
            Mandatory for Life Insured Identity (relationshipCode = INSR). It provides the list of benefits against a life entity to get the
            pricing calculation. 
          items:
            $ref: '#/components/schemas/BenefitModel'  
      
    BenefitModel:
      type: object
      required:
        - benefitCode
        - premiumTypeCode
        - insuranceAmount
      properties:
        benefitCode:
          type: string
          description: >-
            This represents the benefit code against which the quotation pricing
            is required to be calculated
        benefitSequence:
          format: int32
          type: integer
          description: >-
            This depicts the benefit's unique sequence number for a specific
            life being passed by the caller for request/response correlation.
            This can be ommitted in case of a single benefit in a specific life
            entity
        benefitPeriodCode:
          type: string
          description: >-
            This is only applicable to Income Protection benefits, it represents
            the period any benefit is expected to be paid
        insuranceAmount:
          format: double
          type: number
          description: >-
            To specify total insurance amount which will be used to calculate
            the premium results
        loadDuration:
          format: int32
          type: integer
          description: >-
            This specifies the duration of loadings
        medicalAssessLoading:
          format: double
          type: number
          description: >-
            To represent medical loading to be applied to the calculated
            premiums
        medicalPerMilleLoading:
          format: double
          type: number
          description: >-
            To represent per mille medical loading to be applied to the
            calculated premiums
        occupationalAssessLoading:
          format: double
          type: number
          description: >-
            To represent occupational access loading to be applied to the
            calculated premiums
        occupationalPerMilleLoading:
          format: double
          type: number
          description: >-
            To specify per mille occupational loading to be applied to the
            calculated premiums
        premiumTypeCode:
          type: string
          description: >-
            This field identify whether the premiums are levelled, stepped or
            hybrid. Following values are expected * L - Level * S - Stepped. Complete list of premium type codes can be obtained from ReferenceData API 
        premiumDialDownPercent:
          format: double
          type: number
          description: >-
            To specify any dial-down percentage applicable to the calculated
            premiums
        recreationalAssessLoading:
          format: double
          type: number
          description: >-
            To represent any recreational loading to be applied to the
            calculated premiums
        recreationalPerMilleLoading:
          format: double
          type: number
          description: >-
            To represent per mille recreational loading to be applied to the
            calculated premiums
        waitingPeriodCode:
          type: string
          description: >-
            This is only applicable to Income Protection benefits, it represents
            the waiting period before payments can be initiated
        
    BenefitSelectBasicModel:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This represents the opted benefit type against the identity
        effectiveDate:
          description: >-
            This describes the effective date of the policy benefit
          format: date
          type: string
        endDate:
          description: >-
            This describes the end date of the policy benefit
          format: date
          type: string
        insuranceAmount:
          format: double
          type: number
          description: >-
            To specify total sum assured amount against specific benefit in the policy
        modalPremiumAmount:
          format: double
          type: number
          description: >-
            This represents the modal premium amount against the benefit
        paidToDate:
          description: >-
            This describes the date till when the benefit is being paid
          format: date
          type: string
        premiumType:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This field identify whether the premiums are levelled or stepped 
        status:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This represents the current status of the benefit within the policy 
        statusDate:
          format: date-time
          type: string  
          description: >-
            This represents the date at which benefit status is changed         
            
    ClaimSelectBasicModel:
      type: object
      properties:
        claimDate:
          description: >-
            This represents the date when claim request is raised
          format: date
          type: string
        claimAmount:
          format: double
          type: number
          description: >-
            Payment amount expected to be paid if the claim request approves
        claimNo:
          type: integer
          format: int32
          description: >-
            A unique id associated with the claim request being raised 
        identityId:
          type: integer
          format: int32
          description: >-
            OneOffice intneral identity to specify the life entity associated with specific claim request 
        incident: 
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This represents the incident code and description against the claim
        paidAmount:
          format: double
          type: number
          description: >-
            Total payment amount for a specific claim request
        status: 
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This represents the current status of the claim 
    
    BenefitSelectModel:
      type: object
      properties:
        identityId:
          type: integer
          format: int32
          description: >-
            OneOffice intneral identity to specify the life this benfit belongs to 
        identityReference:
          type: string
          description: >-
            External identity reference from consumer's system
        effectiveDate:
          description: >-
            This describes the effective date of the policy benefit
          format: date
          type: string
        endDate:
          description: >-
            This describes the end date date of the policy benefit
          format: date
          type: string
        benefitSequence:
          description: >-
            To represent the whether the benefit record belongs to new business or additional business. Benefit sequence for new business is always 1 where as any additional business would created a new benefit record with an incremental benefit sequence    
          type: integer
        campaign:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This reflects the campaign specific details to which selected benefit belongs    
        cancellationReason:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            To specify benefit cancellation reason against selected benefit    
        claimDate:
          description: >-
            The date at which a claim was made for this risk record
          format: date
          type: string
        creationReason:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            To specify benefit creation reason for selected benefit    
        expiryDate:
          description: >-
            Indicates the  expiry  date of the policy benefit
          format: date
          type: string
        isClaimRequested:
          description: >-
            Indicates a claim has been made against this risk
          type: boolean  
        isCPI:
          description: >-
            Indicates whether consumer protection index is selected for the benefit
          type: boolean
        isPremiumFreeze:
          description: >-
            Identifies if the benefit is currently impacted by 'premium freeze' requirements - i.e. on renewal the annual premium remains the same but the sum insured is decreased. Y - Premium Freeze applies. N - Premium Freeze does not apply
          type: boolean
        isPremiumPaused:
          description: >-
            Indicates if premium pause is active on the current benefit
          type: boolean
        isPremiumWaived:
          description: >-
            Indicates if the benefit is currently impacted by 'premium waiver' requirements i.e. this benefit is having its premium funded by 'waiver' type transactions. Y - On premium waiver, N - Not on premium waiver
          type: boolean
        originalCreationDate:
          description: >-
            This describes the date at which benefit is originally created during policy creation
          format: date
          type: string
        originalEndDate:
          description: >-
            This describes a date when specific benefit is to be ended for first renewal 
          format: date
          type: string
        originalIssueDate:
          description: >-
            This describes the date at which benefit is originally issued during its inception
          format: date
          type: string
        originalStartDate:
          description: >-
            The start date of the current year's cover. It will be different for each benefit renewal
          format: date
          type: string
        paidUptoDate: 
          description: >-
            The date till when the current benefit is paid
          type: string
          format: date
        policyFeeStampDutyAmount:
          format: double
          type: number
          description: >-
            Stamp duty calculated on the policy benefit record
        premiumPauseExpiryDate:
          description: >-
            This describes current premium pause period end date
          format: date
          type: string
        premiumPauseStartDate:
          description: >-
            Current premium pause period start date
          format: date
          type: string
        processCreatedBy:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This identifies the process which creates the selected benefit
        status: 
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This represents the current status of the benefit within the policy 
        statusDate:
          description: >-
            Last status change date for selected benefit
          format: date
          type: string
        registerState: 
          type: string
          description: >-
            This specifies State details for the purpose of stamp duty calculation. This defaults to 'NSW' in
            case not supplied
        discounts:
          allOf:
            - $ref: '#/components/schemas/DiscountModel'
          description: >-
            This specifies discounts associated with the selected benefit 
        loadings:
          allOf:
            - $ref: '#/components/schemas/LoadingModel'
          description: >-
            This specifies loading details associated with the selected benefit  
        premiumComponents:
          allOf:
            - $ref: '#/components/schemas/PremiumComponentsModel'
          description: >-
            This specifies calculated premium related components for selected benefit 
        ratingFactors:
          allOf:
            - $ref: '#/components/schemas/RatingFactorModel'
          description: >-
            This specifies rating factors associated with the selected benefit  
        reinsurance:
          allOf:
            - $ref: '#/components/schemas/ReinsuranceModel'
          description: >-
            This specifies reinsurance details associated with the selected benefit      
            

    LoadingModel:
      type: object
      properties:
        medicalLoadingPercent:
          format: double
          type: number
          description: >-
            To specify medical loading perentage applicable to the specific benefit
        medicalPerMilleLoadingAmount:
          format: double
          type: number
          description: >-
            To specify medical per mille loading amount applicable to the specific benefit  
        medicalPerMilleLoadingDuration:
          description: >-
            This represent the medical per mille loading duration in years
          type: integer
        occupationalLoadingPercent:
          format: double
          type: number
          description: >-
            To specify occupational loading perentage applicable to the specific benefit
        occupationalPerMilleLoadingAmount:
          format: double
          type: number
          description: >-
            To specify occupational per mille loading perentage applicable to the specific benefit
        occupationalPerMilleLoadingDuration:
          description: >-
            This represent the occupational per mille loading duration in years
          type: integer
        recreationalLoadingPercent: 
          format: double
          type: number
          description: >-
            To specify recreational loading perentage applicable to the specific benefit          
        recreationalPerMilleLoadingAmount:
          format: double
          type: number
          description: >-
            To specify recreational per mille loading amount applicable to the specific benefit  
        recreationalPerMilleLoadingDuration:
          description: >-
           This represent the recreational per mille loading duration in years 
          type: integer
    
    DiscountModel:
      type: object
      properties:
        decreasingDiscountPercent:
          format: double
          type: number
          description: >-
            To specify discount percentage being decreased
        expenseDiscountPercent:
          format: double
          type: number
          description: >-
            To specify expense discount percentage    
        negotiationPerMilleDiscountAmount:
          format: double
          type: number
          description: >-
            To specify the negotiated discount against per mille loading 
        noClaimDiscountPercent:
          format: double
          type: number
          description: >-
            To specify the discount percentage applied to benefit for no claim cases
        noClaimDiscountStartDate:
          description: >-
            Start date of current ‘No claim’ discount period. This date is reset if a claim or premium pause event occurs (if configured to do so)
          format: date
          type: string      
        policyFeeNegotiationDiscountPercent:
          format: double
          type: number
          description: >-
            A value captured in benefit maintenance that is applied to the policy fee during the premium calculation
        riskDiscountPercent:
          format: double
          type: number
          description: >-
            A value captured in benefit maintenance that is applied during the premium calculation
            
    ReinsuranceModel:
      type: object
      properties:
        assessmentReferenceNo:
          description: >-
            This reinsurance assessment number 
          type: string
        plan:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This is used to identify a particular reinsurance treaty or facultative arrangement
        proportionPercentage:
          description: >-
            This Reinsurer’s percentage share of the sum reinsured with the associated sum reinsured band
          format: double
          type: number
        retainedSumInsuredAmount:
          format: double
          type: number
          description: >-
            The amount of the sum insured that is retained by the life company. The remainder is reinsured
            
    RatingFactorModel:
      type: object
      properties:
        benefitIndexation:
          description: >-
            Benefit index ( for income protection only)
          type: string
        benefitPeriod:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This represents the benefit period code and description for selected benefit 
        dateOfBirth:
          description: >-
            This identifies date of birth of the life insured within the selected benefit
          type: string
          format: date
        employmentStatus:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            To specify employment status details specified in the selected benefit  
        gender:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            Gender code and description specified in selected benefit 
        occupation:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            Occupation being specified in the selected benefit
        occupationCategory:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            The occupation category being specified in the selected benefit
        premiumType:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This field identify whether the premiums are levelled, stepped or hybrid. Following values are expected * L - Level * S - Stepped
        seriesCode:  
          description: >-
            Series code specified at policy creation
          type: string
        smoker:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This identifies the smoker status of life insured against selected benefit    
        sumInsuredAmount:
          format: double
          type: number
          description: >-
            Total sum insured amount against the selected benefit 
        type:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This represents the benefit code and description for selected benefit 
        waitingPeriod:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This is only applicable to Income Protection benefits, it represents waiting period before payments can be initiated      
            
    PremiumComponentsModel:
      type: object
      properties:
        annualPremiumAmount:
          format: double
          type: number
          description: >-
            Calculated annual premium amount per benefit
        annualStampDutyAmount:
          format: double
          type: number
          description: >-
            Calculated stamp duty amount per benefit
        modalPremiumAmount:
          format: double
          type: number
          description: >-
            Calculated premium amount for each payment frequency
    SegmentModel:
      type: object
      properties:
        segmentType:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This represents the segment type i.e. Assetless Segment, SuperContribution  
        segmentBalance:
          format: double
          type: number
          description: >-
            Total balance available in each segment of the policy 
            
    AccountModel:
      type: object
      properties:
        paymentType:
          type: string
          description: >-
            This represents the payment type * B - Bank  * C - Credit Card
          enum:
            - B
            - C
        bankBSB:
          type: string
          description: >-
            Mandatory in case payment type being bank account (paymentType = B). Bank name will be identified based on the provided BSB. Valid BSB should be in 
            'ddd-ddd' format (e.g. 123-456) 
          pattern: '^(\d){3}-(\d){3}$'
        accountName:
          type: string
          description: >-
            Mandatory in case payment type being bank account (paymentType = B). To specify the account name
        accountNumber:
          type: string
          description: >-
            Mandatory in case payment type being bank account (paymentType = B). To specify the acount number
        cardType:
          type: string
          description: >-
            Mandatory in case payment type being credit card (paymentType = C). This specifies the card type e.g Master, Visa
        cardName:
          type: string
          description: >-
            Mandatory in case payment type being credit card (paymentType = C). To represent the card holder name on the card
        cardNumber:
          type: string
          description: >-
            Mandatory in case payment type being credit card (paymentType = C). This specifies the card number
        expiryDate:
          type: string
          description: >-
            Mandatory in case payment type being credit card (paymentType = C). This specifies the expiry date of the card (YYYY-MM)
          
    ContactModel:
      type: object
      description: >-
        To specify the contact details of the identity records e.g. Home phone, mobile, fax, correspondence method
          
      properties:
        homePhone:
          type: string
          description: >-
            Home phone number of the specific identity record
        mobilePhone:
          type: string
          description: >-
            Mobile number of the specific identity record
        businessPhone:
          type: string
          description: >-
            Business/office phone number of the specific identity record
        fax:
          type: string
          description: >-
            Fax number of the specific identity record
        email:
          type: string
          format: email
          description: >-
            Email address of the specific identity record
        contactMethodCode:
          type: string
          description: >-
            To specify the contact method code of the provided identity record. Complete list of contact method codes can be obtained from ReferenceData API
        correspondenceMethodCode:
          type: string
          description: >-
            To specify the correspondence method code of the provided identity record. Complete list of correspondence method codes can be obtained from ReferenceData API 
            
    AddressModel:
      type: object
      description: >-
        To specify the address details of the identity records including country, state, postcode, suburb, street address
      properties:
        streetAddress:
          type: string
          description: >-
            Street address of the specific identity address record
        suburb:
          type: string
          description: >-
            suburb name of the specific identity address record
        postcode:
          type: string
          description: >-
            Post code of the specific identity address record
        stateCode:
          type: string
          description: >-
            State code of the specific identity address record
        countryCode:
          type: string
          description: >-
            Country code of the specific identity address record
         
    CalculateResponseModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CalculationResult'
        metadata:
          $ref: '#/components/schemas/GenericErrorModel'
    
    PolicyResponseModel:
      type: object
      properties:
        data:
          type: object
          properties:
            policyNumber:
              type: string
              description: >-
                The Policy Number is generated by OneOffice as a result of successful processing. Policy will be managed and maintained in OneOffice based on Policy Number
            identity:
              type: array
              description: >-
                The identity array enlists the list of identities being created or used with in the created policy
              items: 
                $ref: '#/components/schemas/PolicyCreationResult'
        metadata:
          $ref: '#/components/schemas/GenericErrorModel'

    PaymentResponseModel:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PaymentModel'  
        metadata:
          $ref: '#/components/schemas/GenericErrorModel'      
              
    PaymentModel:
      type: object
      properties:
        policyNumber:
          description: >-
            OneOffice policy number being passed in the request for co-relation purpose
          type: string
        balanceBefore:
          description: >-
            Original segment balance amount available to the policy before this transaction  
          type: number
          format: double
        balanceAfter:
          description: >-
            Modified segment balance amount available after performing this transaction   
          type: number
          format: double
        paidToDateBefore:
          description: >-
            The current paid to date of specific policy in the system
          format: date
          type: string
        paidToDateAfter:
          description: >-
            The final paid to date being calculated by system after running charges based on amount paid
          format: date
          type: string  
        nextDebitDate:
          description: >-
            Next debit date reflects the updated period debit date updated in the system as a result of this transaction 
          format: date
          type: string
       
    PolicyCreationResult:
      type: object
      properties:
        identityId:
          type: integer
          format: int32
          description: >-
            Unique identity Id generated by OneOffice. This will be used to identify the correct identity in the other API calls 
        identityReference:
          type: string
          description: >-
            External identity unique reference provided by the caller for correlation purposes 
        identityAltReference:
          type: string
          description: >-
            External identity alternate reference provided by caller for correlation purposes
  
    CalculationResult:
      type: object
      properties:
        identitySequence:
          format: int32
          type: integer
          description: >-
            This depicts the life's unique sequence number being passed by the
            caller for request/response correlation
        benefitSequence:
          format: int32
          type: integer
          description: >-
            This represents the benefit's unique sequence number  being passed
            by the caller for request/response correlation
        calculationResults:
          type: array
          description: >-
            An array of multiple premium frequencies along with the premium
            calculation results
          items:
            $ref: '#/components/schemas/CalculationResults'
            
    CalculationResults:
      type: object
      properties:
        frequencyType:
          type: string
          enum:
            - Weekly
            - Fortnightly
            - FourWeekly
            - Monthly
            - Quarterly
            - HalfYearly
            - Yearly
          description: >-
            This represents the premium frequency against the generated results.
            Only the frequencies associated with requested Product and Benefit
            will be returned by calculation engine
        premium:
          format: double
          type: number
          description: >-
            The calculated insurance premium against the given premium frequency
        stampduty:
          format: double
          type: number
          description: >-
            The calculated stamp duty amount against the premium frequency
        policyFee:
          format: double
          type: number
          description: >-
            The calculated policy administration fee for the premium frequency
        totalPremium:
          format: double
          type: number
          description: >-
            This represents the total net premium amount to be paid
          
    GenericErrorModel:
      type: object
      properties:
        status:
          type: string
          enum:
            - Failure
            - Success
          description: >-
            An Enum representing Success or Failure in the current API call
            being made
        errors:
          type: array
          description: >-
            This depicts an array of error codes and associated descriptions.
            This will null for Success status
          items:
            $ref: '#/components/schemas/ErrorModel'
            
    ErrorModel:
      type: object
      properties:
        code:
          type: string
          description: >-
            A unique code associated with each custom error throw by APIs
        description:
          type: string
          description: >-
            This represents the detailed error description for diagnosis
          
    AuthenticationModel:
      type: object
      required:
        - client_id
        - client_secret
        - grant_type
      properties:    
        client_id:
          type: string
          description: >-
            This specifies the unique client id generated for the consumer
        client_secret:
          type: string
          format: password
          description: >-
            This specifies the client secret associated with a client id assigned to consumer for getting the access token
        grant_type:
          type: string
          description: >-
            This represents the possible grant types associated with the api usage to obtain the access token  
          enum: [client_credentials]
          
    GenericTokenModel:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TokenModel'
        metadata:
          $ref: '#/components/schemas/GenericErrorModel'

    TokenModel:
      type: object
      properties:    
        access_token:
          type: string
          description: >-
            An access token represent an arbitrary string being generated by API services
        token_type:
          type: string
          description: >-
            Token type obtained from the server
        expires_in: 
          type: integer
          description: >-
            This specifies expiration of the access token in minutes. The token will no more be valid after expiry
    
    PaymentRequestModel:
      type: object
      required:
        - policyNumber
        - paidAmount
      properties:
        policyNumber:
          description: >-
            OneOffice policy number to uniquely identify a policy
          type: string
        paidAmount:
          description: >-
            This refers to amount which needs to be adjusted in OneOffice for premium payment. Amount should be greater than 0 for this transaction to be successful
          type: number
          format: double
        chargesRunToDate:
          description: >-
            The date till when OneOffice is required to run the charges. It is a suggestive date and the actual paid to date may vary depending on available amount
          format: date
          type: string
    
    GenericResponseModel:
      type: object
      properties:
        data:
          type: object
        metadata:
          $ref: '#/components/schemas/GenericErrorModel'
          
    PaymentHistoryResponseModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PaymentHistoryModel'  
        metadata:
          $ref: '#/components/schemas/GenericErrorModel'  
    
    PaymentHistoryModel:
      type: object
      properties:
        accountFrom:
          allOf:  
            - $ref: '#/components/schemas/AccountModel'
          description: >-
            From Account details
        accountTo:
          allOf:  
            - $ref: '#/components/schemas/AccountModel'
          description: >-
            To Account details
        claimNo:
          description: >-
            This describes the claim no to identify the claim speficic payments
          type: integer
        deductionDate:
          description: >-
            This describes the deduction date of payment from source
          format: date
          type: string
        effectiveDate:
          description: >-
            This describes the effective date of the payment
          format: date
          type: string
        paymentAmount:
          format: double
          type: number
          description: >-
            To specify the payment amount against each payment record 
        paymentType:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This depicts the type of payment i.e. debit / credit 
        referenceNo:
          description: >-
            This specifies the payment reference no
          type: integer        
        reversalDate:
          description: >-
            This describes the reversal date of the payment
          format: date
          type: string          
        source:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            Source of payment to further sub-classify the payment type
        status:
          allOf:
            - $ref: '#/components/schemas/CodeDescriptionModel'
          description: >-
            This represents status of the payment 
        statusDate:
          format: date
          type: string  
          description: >-
            This represents the payment status change date   
          
  responses:
    '400BadRequest':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResponseModel'
          examples:
            response:
              value:
                data: {}
                metadata:
                  status: Failure
                  errors: []
    
    '401NotAuthorized':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseModel'
              examples:
                response:
                  value:
                    data: {}
                    metadata:
                      status: Failure
                      errors: []              
    
     
    '404NotFound':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseModel'
              examples:
                response:
                  value:
                    data: {}
                    metadata:
                      status: Failure
                      errors: []                                
    
    '500InternalError':
        description: Internal Server Error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericResponseModel'
            examples:
              response:
                value:
                  data: {}
                  metadata:
                    status: Failure
                    errors: []
